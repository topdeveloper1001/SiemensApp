trigger:
- master
pr:
- master

pool:
  vmImage: 'windows-2019'

variables:
  buildConfiguration: 'Release'

steps:
- script: dotnet build --configuration $(buildConfiguration)
  displayName: 'dotnet build $(buildConfiguration)'

- script: |
    dotnet test test/SiemensApp.Test/SiemensApp.Test.csproj --filter Category!=UseSqlServer /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:Exclude=\"[*]SiemensApp.Program,[*]Microsoft.*,[*]System.*,[*]Willow.Infrastructure.*,[xunit*]*\"
  displayName: dotnet test

- script: |
    dotnet tool install dotnet-reportgenerator-globaltool --tool-path tools
    cd tools
    reportgenerator -reports:$(Build.SourcesDirectory)/test/**/coverage.cobertura.xml -targetdir:$(Build.SourcesDirectory)/CodeCoverage -reporttypes:HtmlInline_AzurePipelines;Cobertura
  displayName: Create Code coverage report

- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage'
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(Build.SourcesDirectory)/CodeCoverage/Cobertura.xml'
    reportDirectory: '$(Build.SourcesDirectory)/CodeCoverage'

- task: DotNetCoreCLI@2
  inputs:
    command: publish
    publishWebProjects: False
    projects: 'src/SiemensApp/SiemensApp.csproj'
    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: True

- task: PublishBuildArtifacts@1
